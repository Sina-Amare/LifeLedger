# Generated by Django 5.1.6 on 2025-05-23 10:36

import django.db.models.deletion
import user_profile.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(blank=True, help_text='Key used for account activation. Cleared after activation.', max_length=64, null=True, unique=True, verbose_name='Activation Key')),
                ('profile_picture', models.ImageField(blank=True, help_text="User's profile picture.", null=True, upload_to=user_profile.models.user_profile_picture_path, verbose_name='Profile Picture')),
                ('bio', models.TextField(blank=True, help_text='A short biography or about me section for the user.', max_length=1000, null=True, verbose_name='Biography')),
                ('location', models.CharField(blank=True, help_text="User's general location (e.g., City, Country).", max_length=255, null=True, verbose_name='Location')),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth.", null=True, verbose_name='Date of Birth')),
                ('website_url', models.URLField(blank=True, help_text="User's personal or professional website.", null=True, verbose_name='Website URL')),
                ('linkedin_url', models.URLField(blank=True, help_text="Link to the user's LinkedIn profile.", null=True, verbose_name='LinkedIn Profile URL')),
                ('github_url', models.URLField(blank=True, help_text="Link to the user's GitHub profile.", null=True, verbose_name='GitHub Profile URL')),
                ('show_email_publicly', models.BooleanField(default=False, help_text="If checked, the user's email will be visible on their public profile.", verbose_name='Show Email Publicly')),
                ('show_location_publicly', models.BooleanField(default=False, help_text="If checked, the user's location will be visible on their public profile.", verbose_name='Show Location Publicly')),
                ('show_socials_publicly', models.BooleanField(default=False, help_text='If checked, website, LinkedIn, and GitHub links will be visible on their public profile.', verbose_name='Show Social Links Publicly')),
                ('show_dob_publicly', models.BooleanField(default=False, help_text="If checked, the user's date of birth will be visible on their public profile.", verbose_name='Show Date of Birth Publicly')),
                ('ai_enable_quotes', models.BooleanField(default=True, help_text='Allow AI to generate quotes for journal entries.', verbose_name='Enable AI Quote Generation')),
                ('ai_enable_mood_detection', models.BooleanField(default=True, help_text='Allow AI to detect mood from journal entries.', verbose_name='Enable AI Mood Detection')),
                ('ai_enable_tag_suggestion', models.BooleanField(default=True, help_text='Allow AI to suggest tags for journal entries.', verbose_name='Enable AI Tag Suggestion')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Profile Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Profile Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'ordering': ['user__username'],
            },
        ),
    ]
